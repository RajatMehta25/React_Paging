{"version":3,"sources":["Components/Card.jsx","Components/Pagination.jsx","App.js","index.js"],"names":["Card","id","title","body","className","Pagination","showperpage","onpaging","total","useState","counter","setcounter","Math","ceil","buttons","useEffect","value","onbuttonclick","type","href","onClick","Array","fill","map","ele","index","App","posts","setPosts","start","end","paging","setpaging","fetch","a","axios","get","then","res","data","slice","val","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAmBeA,EAjBF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACzB,OACE,qBAAKC,UAAU,eAAf,SAGM,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,cAAf,SAA8BH,IAC9B,sBAAKG,UAAU,sBAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BF,IAC5B,mBAAGE,UAAU,YAAb,SAA0BD,aCwDzBE,EAjEI,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3C,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAASG,KAAKC,KAAKL,EAAQF,IAAzD,mBAAOQ,EAAP,UAEAC,qBAAU,WACR,IAAMC,EAAQV,EAAcI,EAC5BH,EAASS,EAAQV,EAAaU,KAC7B,CAACN,IACJ,IAAMO,EAAgB,SAACC,GACR,SAATA,EAEAP,EADc,IAAZD,EACS,EAEAA,EAAU,GAEL,SAATQ,GAEPP,EADEG,IAAYJ,EACHA,EAEAA,EAAU,IAI3B,OACE,qBAAKN,UAAU,wCAAf,SACE,qBAAK,aAAW,0BAAhB,SACE,qBAAIA,UAAU,oCAAd,UACE,oBAAIA,UAAU,aAAd,SACE,mBACEA,UAAU,YACVe,KAAK,KACLC,QAAS,kBAAMH,EAAc,SAH/B,wBASD,IAAII,MAAMP,GAASQ,OAAOC,KAAI,SAACC,EAAKC,GAAN,OAC7B,oBACErB,UAAS,oBAAeqB,EAAQ,IAAMf,EAAU,SAAW,MAD7D,SAGE,mBACEN,UAAU,YACVe,KAAK,KACLC,QAAS,kBAAMT,EAAWc,EAAQ,IAHpC,SAKGA,EAAQ,SAIf,oBAAIrB,UAAU,YAAd,SACE,mBACEA,UAAU,YACVe,KAAK,KACLC,QAAS,kBAAMH,EAAc,SAH/B,4BCNGS,MAxCf,WACE,MAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KAIA,EAAsCnB,mBAAS,GAA/C,mBAAOH,EAAP,KACA,GADA,KAC4BG,mBAAS,CACnCoB,MAAO,EACPC,IAAKxB,KAFP,mBAAOyB,EAAP,KAAeC,EAAf,KAKQH,EAAeE,EAAfF,MAAOC,EAAQC,EAARD,IAiBf,OAXAf,qBAAU,WACR,IAAMkB,EAAK,uCAAG,sBAAAC,EAAA,sEACNC,IACHC,IAAI,8CACJC,MAAK,SAACC,GACLV,EAASU,EAAIC,SAJL,2CAAH,qDAOXN,MACC,IAGD,sBAAK7B,UAAU,MAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,oBAAf,SACGuB,EAAMa,MAAMX,EAAOC,GAAKP,KApBpB,SAACkB,EAAKhB,GACjB,IAAQxB,EAAoBwC,EAApBxC,GAAIC,EAAgBuC,EAAhBvC,MAAOC,EAASsC,EAATtC,KACnB,OAAO,cAAC,EAAD,CAAkBF,GAAIA,EAAIC,MAAOA,EAAOC,KAAMA,GAAnCsB,UAqBhB,cAAC,EAAD,CAAYnB,YAAaA,EAAaC,SAjC3B,SAACsB,EAAMC,GACxBE,EAAU,CAACH,MAAMA,EAAMC,IAAIA,KAgCqCtB,MAAOmB,EAAMe,aCrC7EC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8161f305.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ id, title, body }) => {\r\n  return (\r\n    <div className=\"w-25 ps-md-5\">\r\n    \r\n     \r\n          <div className=\"card border-dark mb-3\" >\r\n            <div className=\"card-header\">{id}</div>\r\n            <div className=\"card-body text-dark\">\r\n              <h5 className=\"card-title\">{title}</h5>\r\n              <p className=\"card-text\">{body}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n     \r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Pagination = ({ showperpage, onpaging, total }) => {\r\n  const [counter, setcounter] = useState(1);\r\n  const [buttons, setbuttons] = useState(Math.ceil(total / showperpage));\r\n\r\n  useEffect(() => {\r\n    const value = showperpage * counter;\r\n    onpaging(value - showperpage, value);\r\n  }, [counter]);\r\n  const onbuttonclick = (type) => {\r\n    if (type === \"prev\") {\r\n      if (counter === 1) {\r\n        setcounter(1);\r\n      } else {\r\n        setcounter(counter - 1);\r\n      }\r\n    } else if (type === \"next\") {\r\n      if (buttons === counter) {\r\n        setcounter(counter);\r\n      } else {\r\n        setcounter(counter + 1);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"d-flex justify-content-center m-auto \">\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination justify-content-center\">\r\n          <li className=\"page-item \">\r\n            <a\r\n              className=\"page-link\"\r\n              href=\"!#\"\r\n              onClick={() => onbuttonclick(\"prev\")}\r\n            >\r\n              Previous\r\n            </a>\r\n          </li>\r\n\r\n          {new Array(buttons).fill().map((ele, index) => (\r\n            <li\r\n              className={`page-item ${index + 1 === counter ? \"active\" : null}`}\r\n            >\r\n              <a\r\n                className=\"page-link\"\r\n                href=\"!#\"\r\n                onClick={() => setcounter(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </a>\r\n            </li>\r\n          ))}\r\n          <li className=\"page-item\">\r\n            <a\r\n              className=\"page-link\"\r\n              href=\"!#\"\r\n              onClick={() => onbuttonclick(\"next\")}\r\n            >\r\n              Next\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import \"./App.css\";\nimport react, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport Card from \"./Components/Card\";\nimport Pagination from \"./Components/Pagination\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const onpaging=(start,end)=>{\nsetpaging({start:start,end:end})\n  }\n  const [showperpage, setShowperpage] = useState(8);\n  const [paging, setpaging] = useState({\n    start: 0,\n    end: showperpage,\n  });\n\n  const { start, end } = paging;\n  const disp = (val, index) => {\n    const { id, title, body } = val;\n    return <Card key={index} id={id} title={title} body={body} />;\n  };\n\n  useEffect(() => {\n    const fetch = async () => {\n      await axios\n        .get(\"https://jsonplaceholder.typicode.com/posts\")\n        .then((res) => {\n          setPosts(res.data);\n        });\n    };\n    fetch();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"row mx-md-5 my-md-5\">\n        <div className=\"d-flex flex-wrap \">\n          {posts.slice(start, end).map(disp)}\n        </div>\n      </div>\n      <Pagination showperpage={showperpage} onpaging={onpaging} total={posts.length}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}